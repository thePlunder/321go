<?php
/**
 * Admin functions MSP Helloworld plugin
 **/
 
function registerAddSGFMenu() {
if (!is_super_admin() ) return;
	add_menu_page(
        __( 'Custom Menu Title', 'textdomain' ),
        'Manage SGFs',
        'manage_options',
        'c321go_glift/manageSGF.php',
        'uploadsgf',
        '',//plugins_url( 'c321go_glift/default.png' ),
        130
    );    
    

}

function uploadsgf(){
echo '<div>';
	echo '<form id="my_sgf_upload" action="#" method="post" class="form" enctype="multipart/form-data">'  ; // ajax url should be some global.action="$ajaxurl"
		echo '<input type="file" required="required" name="my_sgf_upload" id="my_sgf_upload" value="" placeholder="<pad naar sgf file>">';
	echo 'Chapter: <input type="number" required="required" name="chapter" id="chapter" value="" >';  //todo keep pervious value, later a drop down menu.
	echo 'Section: <input type="number" required="required" name="section" id="section" value="" >';
	echo 'Volgnummer: <input type="number" required="required" name="volgnummer" id="volgnummer" value="" >';
	//wp_nonce_field( 'my_sgf_upload', 'my_sgf_upload_nonce' );
	 wp_nonce_field( plugin_basename( __FILE__ ), 'my_sgf_upload_nonce' );
	
	submit_button('submit', 'primary', 'submitSGF');
echo '</form>';
echo '</div>';


}


// Check that the nonce is valid, and the user can edit this post.
require_once(ABSPATH .'wp-includes/pluggable.php'); 
if ( 
	isset( $_POST['my_sgf_upload_nonce'] ) 
	//&& isset($_POST['submit'])
	//&& wp_verify_nonce( $_POST['my_sgf_upload_nonce'], 'my_sgf_upload' 		)
	//&& current_user_can( 'edit_post', $_POST['post_id'] )
) {
	// The nonce was valid and the user has the capabilities, it is safe to continue
	
$content = @file_get_contents( $_FILES['my_sgf_upload']['tmp_name'] );
$chapter =  $_POST['chapter'];
$section =  $_POST['section'];
$volgnummer = $_POST['volgnummer'];
	//$attachment_id = wp_upload_bits($_FILES['my_sgf_upload']['name'], null, @file_get_contents( $_FILES['my_sgf_upload']['tmp_name'] ) );
	
add_problem_sgf($content, $chapter, $section, $volgnummer);


} else {

	// The security check failed, maybe show the user an error.
}

//add_action('admin_footer', 'my_test_javascript' ); // Write our JS below here


// if ( ! function_exists( 'wp_handle_upload' ) ) {
//     require_once( ABSPATH . 'wp-admin/includes/file.php' );
// }

// $uploadedfile = $_FILES['file'];

// $upload_overrides = array( 'test_form' => false );

// $movefile = wp_handle_upload( $uploadedfile, $upload_overrides );

// if ( $movefile && !isset( $movefile['error'] ) ) {
//     echo "File is valid, and was successfully uploaded.\n";
//     var_dump( $movefile);
// } else {
//     /**
//      * Error generated by _wp_handle_upload()
//      * @see _wp_handle_upload() in wp-admin/includes/file.php
//      */
//     echo $movefile['error'];
// }
// Notice: Undefined index: my_sgf_u


//  wp_nonce_field('add_transfer','security-code-here'); 


///http://wordpress.stackexchange.com/questions/79898/trigger-custom-action-when-setting-button-pressed
//




// Notice: Undefined variable: user_id in C:\Users\tijmen_van_wettum\Projects\321Go\site\321go\wordpress\wp-content\plugins\c321go_glift\includes\c321go_dbcommunication.php on line 96

// Notice: wpdb::prepare was called incorrectly. The query argument of wpdb::prepare() must have a placeholder. Please see Debugging in WordPress for more information. (This message was added in version 3.9.) in C:\Users\tijmen_van_wettum\Projects\321Go\site\321go\wordpress\wp-includes\functions.php on line 3792
// WordPress database error: [Column 'SGF' cannot be null]
// INSERT INTO `321go_sgf` (`sgf`) VALUES (NULL)


// Notice: Undefined variable: user_id in C:\Users\tijmen_van_wettum\Projects\321Go\site\321go\wordpress\wp-content\plugins\c321go_glift\includes\c321go_dbcommunication.php on line 107
// WordPress database error: [Unknown column 'section' in 'field list']
// INSERT INTO `321go_problems_to_chapter` (`sgf_id`, `chapter`, `section`) VALUES (0, NULL, 1)




//--------------some removed lines that will come in handy later maybe.
// These files need to be included as dependencies when on the front end.
	// require_once( ABSPATH . 'wp-admin/includes/image.php' );
	// require_once( ABSPATH . 'wp-admin/includes/file.php' );
	// require_once( ABSPATH . 'wp-admin/includes/media.php' );
	
	// Let WordPress handle the upload.
	// Remember, 'my_image_upload' is the name of our file input in our form above.
	//$attachment_id = media_handle_upload( 'my_image_upload', $_POST['post_id'] );
	//type : x-go-sgf 
//$uploadedfile = $_FILES['my_sgf_upload'];
//$upload_overrides = array( 'test_form' => false );

//$attachment_id = wp_handle_upload($_FILES['my_sgf_upload'], $upload_overrides);  //['name']





?>

